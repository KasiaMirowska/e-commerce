{"ast":null,"code":"var _jsxFileName = \"/Users/kamirska/UDEMYlearning/e-commerce/src/components/Register/Register.js\";\nimport React, { useState } from 'react';\nimport './Register.styles.scss';\nimport FormInput from '../../components/FormInput/FormInput';\nimport CustomButton from '../../components/CustomButton/CustomButton';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.util';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst mapDispatchToProps = dispatch => ({\n  registerNewUser: (email, password, displayName) => dispatch(signUpStart({\n    email,\n    password,\n    displayName\n  }))\n});\n\nconst Register = ({\n  registerNewUser\n}) => {\n  const [userInfo, setUserInfo] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: false\n  });\n\n  handleSubmit = async e => {\n    e.preventDefault(); //just like in app.js where we were checking googleAuth now we need to create the full entry\n\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n\n    if (password !== confirmPassword) {\n      alert('Password entries do not match!');\n      return;\n    }\n\n    this.props.registerNewUser(email, password, displayName); // try{\n    //     const {user} = await auth.createUserWithEmailAndPassword(email, password)\n    //     //after creating a new user we want to save the authCredentials in here to stay singed in so we call the following \n    //     await createUserProfileDocument(user, {displayName})\n    //     //once process is finished we reset the form\n    //     this.setState({\n    //         displayName: '',\n    //         email: '',\n    //         password: '',\n    //         confirmPassword: '',\n    //     })\n    // }catch(err) {\n    //     console.log(err)\n    // };\n  };\n\n  handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = this.state;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: this.handleChange,\n    label: \"Display name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: this.handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"REGISTER\")));\n};\n\nexport default connect(null, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/components/Register/Register.js"],"names":["React","useState","FormInput","CustomButton","auth","createUserProfileDocument","connect","signUpStart","mapDispatchToProps","dispatch","registerNewUser","email","password","displayName","Register","userInfo","setUserInfo","confirmPassword","handleSubmit","e","preventDefault","state","alert","props","handleChange","name","value","target","setState"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './Register.styles.scss';\nimport FormInput from '../../components/FormInput/FormInput';\nimport CustomButton from '../../components/CustomButton/CustomButton';\nimport {auth, createUserProfileDocument} from '../../firebase/firebase.util';\nimport { connect } from 'react-redux';\nimport {signUpStart} from '../../redux/user/user.actions';\n\n\nconst mapDispatchToProps = dispatch => ({\n    registerNewUser: (email, password, displayName) => dispatch(signUpStart({email, password, displayName})),\n})\n\nconst Register = ({registerNewUser}) => {\n   const [userInfo, setUserInfo] = useState({displayName: '', email: '', password: '',confirmPassword: false })\n\n    handleSubmit = async(e) => {\n        e.preventDefault();\n        //just like in app.js where we were checking googleAuth now we need to create the full entry\n        const {displayName, email, password, confirmPassword} = this.state;\n        if(password !== confirmPassword) {\n            alert('Password entries do not match!')\n            return;\n        }\n\n        this.props.registerNewUser(email, password, displayName)\n       \n       \n        // try{\n            \n        //     const {user} = await auth.createUserWithEmailAndPassword(email, password)\n        //     //after creating a new user we want to save the authCredentials in here to stay singed in so we call the following \n        //     await createUserProfileDocument(user, {displayName})\n        //     //once process is finished we reset the form\n        //     this.setState({\n        //         displayName: '',\n        //         email: '',\n        //         password: '',\n        //         confirmPassword: '',\n        //     })\n        // }catch(err) {\n        //     console.log(err)\n        // };\n    }\n\n    handleChange =(e)=> {\n        const {name, value} = e.target;\n        this.setState({\n            [name]: value,\n        })\n    }\n\n        const {displayName, email, password, confirmPassword} = this.state;\n        return (\n            <div className='sign-up'>\n                <h2 className='title'>I do not have an account</h2>\n                <span>Sign up with your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput \n                        type='text'\n                        name='displayName'\n                        value={displayName}\n                        onChange={this.handleChange}\n                        label='Display name'\n                        required\n                    />\n                    <FormInput \n                         type='email'\n                         name='email'\n                         value={email}\n                         onChange={this.handleChange}\n                         label='Email'\n                         required\n                    />\n                    <FormInput \n                     type='password'\n                     name='password'\n                     value={password}\n                     onChange={this.handleChange}\n                     label='Password'\n                     required\n                     />\n                    <FormInput \n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={this.handleChange}\n                    label='Confirm Password'\n                    required\n                    />\n\n                    <CustomButton type='submit'>REGISTER</CustomButton>\n                </form>\n            </div>\n        )\n    }\n\nexport default connect(null, mapDispatchToProps)(Register)"]},"metadata":{},"sourceType":"module"}