{"ast":null,"code":"import shopActionTypes from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.util'; //thunk is action creator/function that returns dispatch. Istead of a funcion that returns action object we will return another function that returns dispatch\n\nexport const fetchCollectionsStart = () => {\n  return {\n    type: shopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport const fetchCollectionsSuccess = collectionsMap => {\n  return {\n    type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n  };\n};\nexport const fetchCollectionsFailure = errorMessage => {\n  return {\n    type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n  };\n};\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      console.log('here', snapshot, 'SSSSSSSSSSSSS');\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(err => {\n      return dispatch(fetchCollectionsFailure(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","console","log","catch","err","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,8BAAxD,C,CAEA;;AAEA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACvC,SAAQ;AACJC,IAAAA,IAAI,EAAEJ,eAAe,CAACK;AADlB,GAAR;AAGH,CAJM;AAMP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,IAAI;AACrD,SAAQ;AACJH,IAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADlB;AAEJC,IAAAA,OAAO,EAAEF;AAFL,GAAR;AAIH,CALM;AAOP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,IAAI;AACnD,SAAQ;AACJP,IAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADlB;AAEJH,IAAAA,OAAO,EAAEE;AAFL,GAAR;AAIH,CALM;AAOP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACZE,GADD,GAECC,IAFD,CAEMC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,QAApB,EAA8B,eAA9B;AACA,YAAMZ,cAAc,GAAGL,8BAA8B,CAACiB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAND,EAOCe,KAPD,CAOOC,GAAG,IAAI;AACV,aAAOT,QAAQ,CAACJ,uBAAuB,CAACa,GAAG,CAACC,OAAL,CAAxB,CAAf;AACH,KATD;AAUH,GAdD;AAeH,CAhBM","sourcesContent":["import shopActionTypes from './shop.types';\nimport {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.util'\n\n//thunk is action creator/function that returns dispatch. Istead of a funcion that returns action object we will return another function that returns dispatch\n\nexport const fetchCollectionsStart = () => {\n    return ({\n        type: shopActionTypes.FETCH_COLLECTIONS_START,\n    }) \n}\n\nexport const fetchCollectionsSuccess = collectionsMap => {\n    return ({\n        type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n        payload: collectionsMap\n    }) \n}\n\nexport const fetchCollectionsFailure = errorMessage => {\n    return ({\n        type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n        payload: errorMessage,\n    })\n}\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections')\n        dispatch(fetchCollectionsStart());\n\n        collectionRef\n        .get()\n        .then(snapshot => {\n            console.log('here', snapshot, 'SSSSSSSSSSSSS')\n            const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n            dispatch(fetchCollectionsSuccess(collectionsMap)) \n        }) \n        .catch(err => {\n            return dispatch(fetchCollectionsFailure(err.message))\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}