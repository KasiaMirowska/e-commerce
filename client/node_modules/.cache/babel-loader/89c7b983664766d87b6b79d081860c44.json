{"ast":null,"code":"var _jsxFileName = \"/Users/kamirska/UDEMYlearning/e-commerce/src/pages/shop/ShopPage.js\";\nimport React from 'react';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.util';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview';\nimport CollectionPage from '../CollectionPage/CollectionPage';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/WIthSpinner';\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n\n    this.componentDidMount = () => {\n      const collectionRef = firestore.collection('collections');\n      collectionRef.onSnapshot(async snapshot => {\n        const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n        this.props.updateCollections(collectionsMap);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${this.props.match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${this.props.match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/pages/shop/ShopPage.js"],"names":["React","firestore","convertCollectionSnapshotToMap","CollectionsOverview","CollectionPage","Route","connect","updateCollections","WithSpinner","mapDispatchToProps","dispatch","collectionsMap","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","props","render","match","path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAyD,8BAAzD;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,2CAAxB;;AAGA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCH,EAAAA,iBAAiB,EAAEI,cAAc,IAAID,QAAQ,CAACH,iBAAiB,CAACI,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,uBAFmC,GAET,IAFS;;AAAA,SAInCC,iBAJmC,GAIf,MAAM;AACtB,YAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAD,MAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAiB;AACtC,cAAMR,cAAc,GAAGT,8BAA8B,CAACiB,QAAD,CAArD;AACA,aAAKC,KAAL,CAAWb,iBAAX,CAA6BI,cAA7B;AACH,OAHD;AAIH,KAVkC;AAAA;;AAWnCU,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAE,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,IAAK,EAA5C;AAA+C,MAAA,SAAS,EAAEpB,mBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAE,KAAKiB,KAAL,CAAWE,KAAX,CAAiBC,IAAK,gBAAtC;AAAuD,MAAA,SAAS,EAAEnB,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAnBkC;;AAuBvC,eAAeE,OAAO,CAAC,IAAD,EAAOG,kBAAP,CAAP,CAAkCG,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.util';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview';\nimport CollectionPage from '../CollectionPage/CollectionPage';\nimport {Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {updateCollections} from '../../redux/shop/shop.actions'\nimport WithSpinner from '../../components/with-spinner/WIthSpinner';\n\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nclass ShopPage extends React.Component {\n    //fetching data from db\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount = () => {\n        const collectionRef = firestore.collection('collections')\n        collectionRef.onSnapshot(async snapshot=> {\n            const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n            this.props.updateCollections(collectionsMap)\n        })\n    }\n    render() {\n        \n        return (\n            <div className='shop-page'>\n                <Route exact path={`${this.props.match.path}`} component={CollectionsOverview} />\n                <Route path={`${this.props.match.path}/:collectionId`} component={CollectionPage} />\n            </div>\n        )\n    }\n\n}\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}