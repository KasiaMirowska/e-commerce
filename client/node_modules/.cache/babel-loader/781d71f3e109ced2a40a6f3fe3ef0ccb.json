{"ast":null,"code":"import{createSelector}from'reselect';//input selector: \nvar selectShop=function selectShop(state){return state.shop;};export var selectShopCollections=createSelector([selectShop],function(shop){return shop.collections;});//after data normalization we have objects instead of arrays so rendering components is broken hence we should convert that object into an array here:\nexport var selectCollectionsForPreview=createSelector([selectShopCollections],function(collections){return collections?Object.keys(collections).map(function(key){return collections[key];}):[];});//currying\nexport var selectCollection=function selectCollection(collectionUrlParam){return createSelector([selectShopCollections],function(collections){return collections?collections[collectionUrlParam]:null;}//after data normalization we have an object with titled smaller objects holding the collection items\n);};export var selectIsCollectionFetching=createSelector([selectShop],function(shop){return shop.isFetching;});export var selectIsCollectionsLoaded=createSelector([selectShop],function(shop){return!!shop.collections;}//creating a boolean value from property to check if collections are loaded\n);","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectShopCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,OAAQA,cAAR,KAA6B,UAA7B,CAEA;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CACxB,MAAOA,CAAAA,KAAK,CAACC,IAAb,CACH,CAFD,CAIA,MAAO,IAAMC,CAAAA,qBAAqB,CAAGJ,cAAc,CAC/C,CAACC,UAAD,CAD+C,CAE/C,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACE,WAAT,EAF2C,CAA5C,CAIP;AACA,MAAO,IAAMC,CAAAA,2BAA2B,CAAGN,cAAc,CACtD,CAACI,qBAAD,CADsD,CAErD,SAAAC,WAAW,QAAIA,CAAAA,WAAW,CAAEE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6B,SAAAC,GAAG,QAAIL,CAAAA,WAAW,CAACK,GAAD,CAAf,EAAhC,CAAF,CAA0D,EAAzE,EAF0C,CAAlD,CAIP;AACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,kBAAkB,CAAI,CAClD,MAAOZ,CAAAA,cAAc,CACjB,CAACI,qBAAD,CADiB,CAEjB,SAAAC,WAAW,QAAIA,CAAAA,WAAW,CAAEA,WAAW,CAACO,kBAAD,CAAb,CAAoC,IAAnD,EAAuD;AAFjD,CAArB,CAIH,CALM,CAOP,MAAO,IAAMC,CAAAA,0BAA0B,CAAGb,cAAc,CACpD,CAACC,UAAD,CADoD,CAEpD,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACW,UAAT,EAFgD,CAAjD,CAKP,MAAO,IAAMC,CAAAA,yBAAyB,CAAGf,cAAc,CACnD,CAACC,UAAD,CADmD,CAEnD,SAAAE,IAAI,QAAI,CAAC,CAACA,IAAI,CAACE,WAAX,EAAuB;AAFwB,CAAhD","sourcesContent":["import {createSelector} from 'reselect';\n\n//input selector: \nconst selectShop = state => {\n    return state.shop;\n}\n\nexport const selectShopCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n)\n//after data normalization we have objects instead of arrays so rendering components is broken hence we should convert that object into an array here:\nexport const selectCollectionsForPreview = createSelector(\n   [selectShopCollections],\n    collections => collections? Object.keys(collections).map(key => collections[key]) : [],\n)\n//currying\nexport const selectCollection = collectionUrlParam => {\n    return createSelector(\n        [selectShopCollections],\n        collections => collections? collections[collectionUrlParam] : null//after data normalization we have an object with titled smaller objects holding the collection items\n    )\n}\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections //creating a boolean value from property to check if collections are loaded\n)"]},"metadata":{},"sourceType":"module"}