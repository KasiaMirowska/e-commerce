{"ast":null,"code":"var _jsxFileName = \"/Users/kamirska/UDEMYlearning/e-commerce/src/App.js\";\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/HomePage';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ShopPage from './pages/shop/ShopPage';\nimport Header from './components/Header/Header';\nimport LoginRegister from './pages/LoginRegister/LoginRegister';\nimport CheckOut from './pages/checkOut/CheckOut';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { checkUserSession } from './redux/user/user.actions'; // const App = ({checkUserSession, currentUser}) => {\n//   console.log(currentUser)\n//   useEffect(() => {\n//     checkUserSession()\n//   }, [checkUserSession]) //need to pass second argument- array in order to make effect invoke only once when mounting rather then every time state changes and rerenders.\n//     return (\n//       <div>\n//         <Header />\n//         <Switch>\n//           <Route exact path='/' component={HomePage} />\n//           <Route path='/shop' component={ShopPage} />\n//           <Route exact path='/signin' render={() => currentUser ? (<Redirect to='/' />) : (<LoginRegister />)} />\n//           <Route exact path='/checkout' component={CheckOut} />\n//         </Switch>\n//       </div>\n//     );\n//   }\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      checkUserSession\n    } = this.props;\n    checkUserSession();\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: Checkout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(LoginRegister, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} //bringing user reducer from redux\n// const mapStateToProps = ({ user }) => {\n//   return ({\n//     currentUser: user.setCurrentUser,\n//   })\n// }\n\n\nconst mapStateToProps = state => ({\n  currentUser: selectCurrentUser(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/App.js"],"names":["React","useEffect","HomePage","Route","Switch","Redirect","connect","ShopPage","Header","LoginRegister","CheckOut","selectCurrentUser","checkUserSession","App","Component","unsubscribeFromAuth","componentDidMount","props","componentWillUnmount","render","Checkout","currentUser","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAAQC,iBAAR,QAAgC,6BAAhC;AACA,SAAQC,gBAAR,QAA+B,2BAA/B,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEJ,MAAAA;AAAF,QAAuB,KAAKK,KAAlC;AACAL,IAAAA,gBAAgB;AACjB;;AAEDM,EAAAA,oBAAoB,GAAG;AACrB,SAAKH,mBAAL;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEjB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEK,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEa,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,MACN,KAAKH,KAAL,CAAWI,WAAX,gBACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,gBAGE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF,CADF;AAqBD;;AAlC+B,C,CAoClC;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCF,EAAAA,WAAW,EAAEV,iBAAiB,CAACY,KAAD;AADE,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCb,EAAAA,gBAAgB,EAAE,MAAMa,QAAQ,CAACb,gBAAgB,EAAjB;AADM,CAAL,CAAnC;;AAIA,eAAeN,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,GAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/HomePage';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ShopPage from './pages/shop/ShopPage';\nimport Header from './components/Header/Header';\nimport LoginRegister from './pages/LoginRegister/LoginRegister';\nimport CheckOut from './pages/checkOut/CheckOut';\nimport {selectCurrentUser} from './redux/user/user.selectors';\nimport {checkUserSession} from './redux/user/user.actions';\n\n// const App = ({checkUserSession, currentUser}) => {\n//   console.log(currentUser)\n//   useEffect(() => {\n//     checkUserSession()\n//   }, [checkUserSession]) //need to pass second argument- array in order to make effect invoke only once when mounting rather then every time state changes and rerenders.\n  \n//     return (\n//       <div>\n//         <Header />\n        \n//         <Switch>\n\n//           <Route exact path='/' component={HomePage} />\n//           <Route path='/shop' component={ShopPage} />\n//           <Route exact path='/signin' render={() => currentUser ? (<Redirect to='/' />) : (<LoginRegister />)} />\n//           <Route exact path='/checkout' component={CheckOut} />\n//         </Switch>\n//       </div>\n//     );\n//   }\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const { checkUserSession } = this.props;\n    checkUserSession();\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route exact path='/checkout' component={Checkout} />\n          <Route\n            exact\n            path='/signin'\n            render={() =>\n              this.props.currentUser ? (\n                <Redirect to='/' />\n              ) : (\n                <LoginRegister />\n              )\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n//bringing user reducer from redux\n// const mapStateToProps = ({ user }) => {\n//   return ({\n//     currentUser: user.setCurrentUser,\n//   })\n// }\nconst mapStateToProps = (state) => ({\n    currentUser: selectCurrentUser(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n"]},"metadata":{},"sourceType":"module"}