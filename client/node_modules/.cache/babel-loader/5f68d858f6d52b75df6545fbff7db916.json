{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist'; //allows browser to cache our store\n\nimport rootReducer from './root-reducer';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from '../redux/shop/shop-sagas'; //middlaware is an array hence to keep it scalable we write the following:\n\nconst sagaMiddlewara = createSagaMiddleware();\nconst middlewares = [sagaMiddlewara];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nsagaMiddlewara.run(fetchCollectionsStart);\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","rootReducer","thunk","createSagaMiddleware","fetchCollectionsStart","sagaMiddlewara","middlewares","process","env","NODE_ENV","push","run","store","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,YAAR,QAA2B,eAA3B,C,CAA4C;;AAC5C,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,qBAAR,QAAoC,0BAApC,C,CACA;;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AACA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA2C;AACvCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBX,MAAjB;AACH;;AACDM,cAAc,CAACM,GAAf,CAAmBP,qBAAnB;AACA,OAAO,MAAMQ,KAAK,GAAGf,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAAzB;AACP,OAAO,MAAMO,SAAS,GAAGb,YAAY,CAACY,KAAD,CAA9B;AACP,eAAe;AAACA,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport {persistStore} from 'redux-persist'; //allows browser to cache our store\nimport rootReducer from './root-reducer';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport {fetchCollectionsStart} from '../redux/shop/shop-sagas';\n//middlaware is an array hence to keep it scalable we write the following:\n\nconst sagaMiddlewara = createSagaMiddleware();\nconst middlewares = [sagaMiddlewara];\n\nif(process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n}\nsagaMiddlewara.run(fetchCollectionsStart)\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\nexport const persistor = persistStore(store);  \nexport default {store, persistor};"]},"metadata":{},"sourceType":"module"}