{"ast":null,"code":"var _jsxFileName = \"/Users/kamirska/UDEMYlearning/e-commerce/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/HomePage';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport ShopPage from './pages/shop/ShopPage';\nimport Header from './components/Header/Header';\nimport LoginRegister from './pages/LoginRegister/LoginRegister';\nimport { auth, createUserProfileDocument } from './firebase/firebase.util';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n\n    this.componentDidMount = () => {\n      this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n        if (userAuth) {\n          const userRef = await createUserProfileDocument(userAuth);\n          userRef.onSnapshot(snapshot => {\n            //calling for a snapshot of user object being created or that already is inside the db. This method allows us to check and get properties of user object with .data()method\n            this.props.setCurrentUser({\n              id: snapshot.id,\n              name: snapshot.displayName,\n              email: snapshot.email,\n              ...snapshot.data()\n            });\n          });\n        }\n\n        this.props.setCurrentUser(userAuth); //when user is signed out it return null so we need to update the state/redux to rerender\n      });\n    };\n\n    this.componentWillUnmount = () => {\n      this.unsubscribeFromAuth(); //making sure we sign off/expire the access\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signin\",\n      component: LoginRegister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nconst mapStateToPops = () => ({});\n\nconst mapDispatchToPops = dispatch => ({\n  //dispatch is e mthod that takes whatever argument passed and makes it available to every reducer, here a user object being set though userAuth\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n}); //we put null becasue app.js does not need/take anything from root-reducer;\n\n\nexport default connect(null, mapDispatchToPops)(App);","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/App.js"],"names":["React","HomePage","Route","Switch","Redirect","connect","setCurrentUser","ShopPage","Header","LoginRegister","auth","createUserProfileDocument","App","Component","unsubscribeFromAuth","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","props","id","name","displayName","email","data","componentWillUnmount","render","mapStateToPops","mapDispatchToPops","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAAQC,IAAR,EAAcC,yBAAd,QAA8C,0BAA9C;;AAEA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,mBAFgC,GAEV,IAFU;;AAAA,SAIhCC,iBAJgC,GAIZ,MAAM;AACxB,WAAKD,mBAAL,GAA2BJ,IAAI,CAACM,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACnE,YAAGA,QAAH,EAAa;AACX,gBAAMC,OAAO,GAAG,MAAMP,yBAAyB,CAACM,QAAD,CAA/C;AACAC,UAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAAE;AAC/B,iBAAKC,KAAL,CAAWf,cAAX,CAA0B;AACtBgB,cAAAA,EAAE,EAAEF,QAAQ,CAACE,EADS;AAEtBC,cAAAA,IAAI,EAAEH,QAAQ,CAACI,WAFO;AAGtBC,cAAAA,KAAK,EAAEL,QAAQ,CAACK,KAHM;AAItB,iBAAGL,QAAQ,CAACM,IAAT;AAJmB,aAA1B;AAMD,WAPD;AAQD;;AACC,aAAKL,KAAL,CAAWf,cAAX,CAA0BW,QAA1B,EAZiE,CAY7B;AACvC,OAb0B,CAA3B;AAcD,KAnB+B;;AAAA,SAqBhCU,oBArBgC,GAqBT,MAAM;AAC3B,WAAKb,mBAAL,GAD2B,CACC;AAC7B,KAvB+B;AAAA;;AAyBhCc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAE3B,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEM,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eAIA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEE,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CAFF,CADF;AAWD;;AArC+B;;AAyClC,MAAMoB,cAAc,GAAG,OAAO,EAAP,CAAvB;;AAIA,MAAMC,iBAAiB,GAAGC,QAAQ,KAAK;AACrC;AACAzB,EAAAA,cAAc,EAAE0B,IAAI,IAAED,QAAQ,CAACzB,cAAc,CAAC0B,IAAD,CAAf;AAFO,CAAL,CAAlC,C,CAMA;;;AACA,eAAe3B,OAAO,CAAC,IAAD,EAAOyB,iBAAP,CAAP,CAAiClB,GAAjC,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/HomePage';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {setCurrentUser} from './redux/user/user.actions';\nimport ShopPage from './pages/shop/ShopPage';\nimport Header from './components/Header/Header';\nimport LoginRegister from './pages/LoginRegister/LoginRegister';\nimport {auth, createUserProfileDocument} from './firebase/firebase.util';\n\nclass App extends React.Component {\n  \n  unsubscribeFromAuth = null;\n\n  componentDidMount = () => {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth) {\n        const userRef = await createUserProfileDocument(userAuth)\n        userRef.onSnapshot(snapshot => { //calling for a snapshot of user object being created or that already is inside the db. This method allows us to check and get properties of user object with .data()method\n          this.props.setCurrentUser({\n              id: snapshot.id,\n              name: snapshot.displayName,\n              email: snapshot.email,\n              ...snapshot.data()\n          })\n        }) \n      } \n        this.props.setCurrentUser(userAuth) //when user is signed out it return null so we need to update the state/redux to rerender\n    })\n  }\n\n  componentWillUnmount = () => {\n    this.unsubscribeFromAuth(); //making sure we sign off/expire the access\n  }\n  \n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n       \n        <Route exact path='/' component={HomePage} />\n        <Route path='/shop' component={ShopPage} />\n        <Route path='/signin' component={LoginRegister} />\n        </Switch>\n       </div>\n    );\n  }\n  \n}\n\nconst mapStateToPops = () => ({\n\n})\n\nconst mapDispatchToPops = dispatch => ({\n  //dispatch is e mthod that takes whatever argument passed and makes it available to every reducer, here a user object being set though userAuth\n  setCurrentUser: user=>dispatch(setCurrentUser(user))\n})\n\n\n//we put null becasue app.js does not need/take anything from root-reducer;\nexport default connect(null, mapDispatchToPops)(App)\n\n"]},"metadata":{},"sourceType":"module"}