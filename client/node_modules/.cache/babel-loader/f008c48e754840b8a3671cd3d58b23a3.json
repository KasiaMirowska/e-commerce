{"ast":null,"code":"import _objectSpread from\"/Users/kamirska/UDEMYlearning/e-commerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import UserActionTypes from\"./user.types\";var INITIAL_STATE={currentUser:null,error:null};//state gets passed by redux but if there is no state the initial_state will be used\nvar userReducer=function userReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INITIAL_STATE;var action=arguments.length>1?arguments[1]:undefined;//action obj has type indicating which redducer should get affected and payload which is the property that gets changed\n//state is current state of the app\nswitch(action.type){case UserActionTypes.GOOGLE_SIGNIN_SUCCESS:case UserActionTypes.EMAIL_SIGNIN_SUCCESS:return _objectSpread({},state,{currentUser:action.payload,error:null});case UserActionTypes.GOOGLE_SIGNIN_FAILURE:case UserActionTypes.EMAIL_SIGNIN_FAILURE:return _objectSpread({},state,{error:action.payload});default:return state;}};export default userReducer;","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/redux/user/user-reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","error","userReducer","state","action","type","GOOGLE_SIGNIN_SUCCESS","EMAIL_SIGNIN_SUCCESS","payload","GOOGLE_SIGNIN_FAILURE","EMAIL_SIGNIN_FAILURE"],"mappings":"8JAAA,MAAOA,CAAAA,eAAP,KAA4B,cAA5B,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,WAAW,CAAE,IADK,CAElBC,KAAK,CAAE,IAFW,CAAtB,CAIA;AACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BJ,aAA0B,IAAXK,CAAAA,MAAW,2CACnD;AACA;AACA,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKP,CAAAA,eAAe,CAACQ,qBAArB,CACA,IAAKR,CAAAA,eAAe,CAACS,oBAArB,CACI,wBACOJ,KADP,EAEIH,WAAW,CAAEI,MAAM,CAACI,OAFxB,CAGIP,KAAK,CAAE,IAHX,GAKJ,IAAKH,CAAAA,eAAe,CAACW,qBAArB,CACA,IAAKX,CAAAA,eAAe,CAACY,oBAArB,CACI,wBACOP,KADP,EAEIF,KAAK,CAAEG,MAAM,CAACI,OAFlB,GAKJ,QACI,MAAOL,CAAAA,KAAP,CAhBR,CAkBH,CArBD,CAuBA,cAAeD,CAAAA,WAAf","sourcesContent":["import UserActionTypes from \"./user.types\";\n\nconst INITIAL_STATE = {\n    currentUser: null,\n    error: null,\n}\n//state gets passed by redux but if there is no state the initial_state will be used\nconst userReducer = (state = INITIAL_STATE, action) => {\n    //action obj has type indicating which redducer should get affected and payload which is the property that gets changed\n    //state is current state of the app\n    switch (action.type) {\n        case UserActionTypes.GOOGLE_SIGNIN_SUCCESS:\n        case UserActionTypes.EMAIL_SIGNIN_SUCCESS:\n            return {\n                ...state,\n                currentUser: action.payload,\n                error: null\n            }\n        case UserActionTypes.GOOGLE_SIGNIN_FAILURE:\n        case UserActionTypes.EMAIL_SIGNIN_FAILURE:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}