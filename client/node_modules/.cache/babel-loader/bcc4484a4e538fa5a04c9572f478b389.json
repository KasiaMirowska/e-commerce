{"ast":null,"code":"import React from'react';import CustomButton from'../CustomButton/CustomButton';import CartItem from'../CartItem/CartItem';import'./Cart.styles.scss';import{connect}from'react-redux';import{selectCartItems}from'../../redux/cart/cart.selectors';import{selectCartHidden}from'../../redux/cart/cart.selectors';import{createStructuredSelector}from'reselect';import{withRouter}from'react-router-dom';import{toggleCartHidden}from'../../redux/cart/cart.actions';var mapStateToProps=createStructuredSelector({// cartItems: state.cart.cartItems,\ncartItems:selectCartItems});var Cart=function Cart(props){//connect passes dispatch as a prop to component even if we do not provide a second argument to connect, see:\nconsole.log(props,'IN CART');var items=props.cartItems.map(function(item){return/*#__PURE__*/React.createElement(CartItem,Object.assign({key:item.id},item));});return/*#__PURE__*/React.createElement(\"div\",{className:\"cart-dropdown\"},/*#__PURE__*/React.createElement(\"div\",{className:\"cart-items\"},props.cartItems.length>0?items:/*#__PURE__*/React.createElement(\"p\",{className:\"empty-message\"},\"Your cart is empty\"),/*#__PURE__*/React.createElement(CustomButton,{onClick:function onClick(){props.history.push('/checkout');props.dispatch(toggleCartHidden());}},\"GO TO CHECKOUT\")));};export default withRouter(connect(mapStateToProps)(Cart));","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/components/CartDropdown/Cart.js"],"names":["React","CustomButton","CartItem","connect","selectCartItems","selectCartHidden","createStructuredSelector","withRouter","toggleCartHidden","mapStateToProps","cartItems","Cart","props","console","log","items","map","item","id","length","history","push","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAO,oBAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,eAAT,KAAgC,iCAAhC,CACA,OAASC,gBAAT,KAAiC,iCAAjC,CACA,OAAQC,wBAAR,KAAuC,UAAvC,CACA,OAASC,UAAT,KAA0B,kBAA1B,CACA,OAASC,gBAAT,KAAiC,+BAAjC,CAEA,GAAMC,CAAAA,eAAe,CAAGH,wBAAwB,CAAC,CAC7C;AACII,SAAS,CAAEN,eAF8B,CAAD,CAAhD,CAKA,GAAMO,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CACpB;AACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAmB,SAAnB,EACA,GAAMG,CAAAA,KAAK,CAAGH,KAAK,CAACF,SAAN,CAAgBM,GAAhB,CAAoB,SAAAC,IAAI,qBAClC,oBAAC,QAAD,gBAAU,GAAG,CAAEA,IAAI,CAACC,EAApB,EAA4BD,IAA5B,EADkC,EAAxB,CAAd,CAIA,mBACI,2BAAK,SAAS,CAAC,eAAf,eACI,2BAAK,SAAS,CAAC,YAAf,EACKL,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CAAyB,CAAzB,CACGJ,KADH,cAGG,yBAAG,SAAS,CAAC,eAAb,uBAJR,cAKI,oBAAC,YAAD,EAAc,OAAO,CAAE,kBAAM,CACzBH,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,WAAnB,EACAT,KAAK,CAACU,QAAN,CAAed,gBAAgB,EAA/B,EAAmC,CAFvC,mBALJ,CADJ,CADJ,CAcH,CArBD,CAuBA,cAAeD,CAAAA,UAAU,CAACJ,OAAO,CAACM,eAAD,CAAP,CAAyBE,IAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport CustomButton from '../CustomButton/CustomButton';\nimport CartItem from '../CartItem/CartItem';\nimport './Cart.styles.scss';\nimport { connect } from 'react-redux';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { selectCartHidden } from '../../redux/cart/cart.selectors';\nimport {createStructuredSelector} from 'reselect';\nimport { withRouter} from 'react-router-dom';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nconst mapStateToProps = createStructuredSelector({\n    // cartItems: state.cart.cartItems,\n        cartItems: selectCartItems,\n    })\n\nconst Cart = (props) => {\n    //connect passes dispatch as a prop to component even if we do not provide a second argument to connect, see:\n    console.log(props, 'IN CART')\n    const items = props.cartItems.map(item => (\n        <CartItem key={item.id} {...item} />\n    ));\n    \n    return (\n        <div className='cart-dropdown'>\n            <div className='cart-items'>\n                {props.cartItems.length > 0?\n                    items\n                    :\n                    <p className='empty-message'>Your cart is empty</p>}\n                <CustomButton onClick={() => {\n                    props.history.push('/checkout');\n                    props.dispatch(toggleCartHidden())}}>GO TO CHECKOUT</CustomButton>\n            </div>\n        </div>\n    );\n\n};\n\nexport default withRouter(connect(mapStateToProps)(Cart));"]},"metadata":{},"sourceType":"module"}