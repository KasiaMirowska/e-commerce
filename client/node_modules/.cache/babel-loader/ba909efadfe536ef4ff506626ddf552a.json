{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from '../user/user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.util';\nimport { googleSignInSuccess, googleSignInFailure } from '../user/user.actions';\nimport { connect } from 'react-redux';\n\nfunction* signInWithGoogle() {\n  //api call here to sign in instead of in App.js:\n  try {\n    const userRef = yield auth.signInWithPopup(googleProvider);\n    console.log(userRef.user, userRef.user.uid);\n    const user = yield call(createUserProfileDocument(userRef.user));\n    const userSnapshot = yield user.get(); //put method puts received data back into redux flow\n\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(googleSignInFailure(err));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","connect","signInWithGoogle","userRef","signInWithPopup","console","log","user","uid","userSnapshot","get","id","data","err","onGoogleSignInStart","GOOGLE_SIGNIN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,8BAAhE;AACA,SAAQC,mBAAR,EAA6BC,mBAA7B,QAAuD,sBAAvD;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,UAAUC,gBAAV,GAA6B;AACzB;AACA,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMP,IAAI,CAACQ,eAAL,CAAqBP,cAArB,CAAtB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,IAApB,EAA0BJ,OAAO,CAACI,IAAR,CAAaC,GAAvC;AACA,UAAMD,IAAI,GAAG,MAAMb,IAAI,CAACI,yBAAyB,CAACK,OAAO,CAACI,IAAT,CAA1B,CAAvB;AACA,UAAME,YAAY,GAAG,MAAMF,IAAI,CAACG,GAAL,EAA3B,CAJA,CAKA;;AACA,UAAMlB,GAAG,CAACO,mBAAmB,CAAC;AAACY,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAApB,CAAT;AAEH,GARD,CAQE,OAAOC,GAAP,EAAY;AACV,UAAMrB,GAAG,CAACQ,mBAAmB,CAACa,GAAD,CAApB,CAAT;AACH;AACJ;;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMvB,UAAU,CAACI,eAAe,CAACoB,mBAAjB,EAAsCb,gBAAtC,CAAhB;AACH;AAED,OAAO,UAAUc,SAAV,GAAuB;AAC1B,QAAMvB,GAAG,CAAC,CACNC,IAAI,CAACoB,mBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from '../user/user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.util';\nimport {googleSignInSuccess, googleSignInFailure} from '../user/user.actions';\nimport { connect } from 'react-redux';\n\nfunction* signInWithGoogle() {\n    //api call here to sign in instead of in App.js:\n    try {\n        const userRef = yield auth.signInWithPopup(googleProvider)\n        console.log(userRef.user, userRef.user.uid )\n        const user = yield call(createUserProfileDocument(userRef.user))\n        const userSnapshot = yield user.get()\n        //put method puts received data back into redux flow\n        yield put(googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n       \n    } catch (err) {\n        yield put(googleSignInFailure(err))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle)\n}\n\nexport function* userSagas () {\n    yield all([\n        call(onGoogleSignInStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}