{"ast":null,"code":"var _jsxFileName = \"/Users/kamirska/UDEMYlearning/e-commerce-client/src/components/Register/Register.js\";\nimport React, { useState } from 'react';\nimport './Register.styles.scss';\nimport FormInput from '../../components/FormInput/FormInput';\nimport CustomButton from '../../components/CustomButton/CustomButton';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.util';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst mapDispatchToProps = dispatch => ({\n  registerNewUser: (email, password, displayName) => dispatch(signUpStart({\n    email,\n    password,\n    displayName\n  }))\n});\n\nconst Register = ({\n  registerNewUser\n}) => {\n  const [userInfo, setUserInfo] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userInfo;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Password entries do not match!');\n      return;\n    }\n\n    registerNewUser(email, password, displayName);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserInfo({ ...userInfo,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"REGISTER\")));\n};\n\nexport default connect(null, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce-client/src/components/Register/Register.js"],"names":["React","useState","FormInput","CustomButton","auth","createUserProfileDocument","connect","signUpStart","mapDispatchToProps","dispatch","registerNewUser","email","password","displayName","Register","userInfo","setUserInfo","confirmPassword","handleSubmit","e","preventDefault","alert","handleChange","name","value","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './Register.styles.scss';\nimport FormInput from '../../components/FormInput/FormInput';\nimport CustomButton from '../../components/CustomButton/CustomButton';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.util';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\n\n\nconst mapDispatchToProps = dispatch => ({\n    registerNewUser: (email, password, displayName) => dispatch(signUpStart({ email, password, displayName })),\n})\n\nconst Register = ({ registerNewUser }) => {\n    const [userInfo, setUserInfo] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const { displayName, email, password, confirmPassword } = userInfo;\n\n   const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            alert('Password entries do not match!')\n            return;\n        }\n\n        registerNewUser(email, password, displayName)\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setUserInfo({\n            ...userInfo,\n            [name]: value,\n        })\n    }\n\n    return (\n        <div className='sign-up'>\n            <h2 className='title'>I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n\n            <form onSubmit={handleSubmit}>\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    label='Display name'\n                    required\n                />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    label='Email'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    label='Password'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label='Confirm Password'\n                    required\n                />\n\n                <CustomButton type='submit'>REGISTER</CustomButton>\n            </form>\n        </div>\n    )\n}\n\nexport default connect(null, mapDispatchToProps)(Register)"]},"metadata":{},"sourceType":"module"}