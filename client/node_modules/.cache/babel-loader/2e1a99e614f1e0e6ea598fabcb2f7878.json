{"ast":null,"code":"var _jsxFileName = \"/Users/kamirska/UDEMYlearning/e-commerce/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/HomePage';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport ShopPage from './pages/shop/ShopPage';\nimport Header from './components/Header/Header';\nimport LoginRegister from './pages/LoginRegister/LoginRegister';\nimport { auth, createUserProfileDocument } from './firebase/firebase.util';\nimport CartIcon from './components/CartIcon/CartIcon';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n\n    this.componentDidMount = () => {\n      this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n        if (userAuth) {\n          const userRef = await createUserProfileDocument(userAuth);\n          userRef.onSnapshot(snapshot => {\n            //calling for a snapshot of user object being created or that already is inside the db. This method allows us to check and get properties of user object with .data()method\n            this.props.setCurrentUser({\n              id: snapshot.id,\n              name: snapshot.displayName,\n              email: snapshot.email,\n              ...snapshot.data()\n            });\n          });\n        }\n\n        this.props.setCurrentUser(userAuth); //when user is signed out it return null so we need to update the state/redux to rerender\n      });\n    };\n\n    this.componentWillUnmount = () => {\n      this.unsubscribeFromAuth(); //making sure we sign off/expire the access\n    };\n  }\n\n  render() {\n    console.log(this.props, 'PROPS');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 77\n        }\n      }) : /*#__PURE__*/React.createElement(LoginRegister, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 101\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: CartIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    })));\n  }\n\n} //bringing user reducer from redux\n\n\nconst mapStateToPops = ({\n  user\n}) => {\n  console.log(user, '?????????UUUUUUUU');\n  return {\n    currentUser: user.setCurrentUser\n  };\n};\n\nconst mapDispatchToPops = dispatch => ({\n  //dispatch is a mwthod that takes whatever argument passed and makes it available to every reducer, here a user object being set though userAuth\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n}); //we put null becasue app.js does not need/take anything from root-reducer;\n\n\nexport default connect(mapStateToPops, mapDispatchToPops)(App);","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/App.js"],"names":["React","HomePage","Route","Switch","Redirect","connect","setCurrentUser","ShopPage","Header","LoginRegister","auth","createUserProfileDocument","CartIcon","App","Component","unsubscribeFromAuth","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","props","id","name","displayName","email","data","componentWillUnmount","render","console","log","currentUser","mapStateToPops","user","mapDispatchToPops","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/HomePage';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {setCurrentUser} from './redux/user/user.actions';\nimport ShopPage from './pages/shop/ShopPage';\nimport Header from './components/Header/Header';\nimport LoginRegister from './pages/LoginRegister/LoginRegister';\nimport {auth, createUserProfileDocument} from './firebase/firebase.util';\nimport CartIcon from './components/CartIcon/CartIcon';\n\nclass App extends React.Component {\n  \n  unsubscribeFromAuth = null;\n\n  componentDidMount = () => {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth) {\n        const userRef = await createUserProfileDocument(userAuth)\n        userRef.onSnapshot(snapshot => { //calling for a snapshot of user object being created or that already is inside the db. This method allows us to check and get properties of user object with .data()method\n          this.props.setCurrentUser({\n              id: snapshot.id,\n              name: snapshot.displayName,\n              email: snapshot.email,\n              ...snapshot.data()\n          })\n        }) \n      } \n        this.props.setCurrentUser(userAuth) //when user is signed out it return null so we need to update the state/redux to rerender\n    })\n  }\n\n  componentWillUnmount = () => {\n    this.unsubscribeFromAuth(); //making sure we sign off/expire the access\n  }\n  \n  render() {\n    console.log(this.props, 'PROPS')\n    return (\n      <div>\n        <Header />\n        <Switch>\n       \n        <Route exact path='/' component={HomePage} />\n        <Route path='/shop' component={ShopPage} />\n        <Route exact path='/signin' render={() => this.props.currentUser ? (<Redirect to='/' />) : (<LoginRegister />)} />\n        <Route exact path='/' component={CartIcon} />\n        </Switch>\n       </div>\n    );\n  }\n  \n}\n//bringing user reducer from redux\nconst mapStateToPops = ({user}) => {\n  console.log(user, '?????????UUUUUUUU')\n  return ({\n  currentUser: user.setCurrentUser,\n  })\n}\n\nconst mapDispatchToPops = dispatch => ({\n  //dispatch is a mwthod that takes whatever argument passed and makes it available to every reducer, here a user object being set though userAuth\n  setCurrentUser: user=>dispatch(setCurrentUser(user))\n})\n\n\n//we put null becasue app.js does not need/take anything from root-reducer;\nexport default connect(\n  mapStateToPops, \n  mapDispatchToPops)(App)\n\n"]},"metadata":{},"sourceType":"module"}