{"ast":null,"code":"var _jsxFileName = \"/Users/kamirska/UDEMYlearning/e-commerce/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/HomePage';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport ShopPage from './pages/shop/ShopPage';\nimport Header from './components/Header/Header';\nimport LoginRegister from './pages/LoginRegister/LoginRegister';\nimport CheckOut from './pages/checkOut/CheckOut';\nimport { auth, createUserProfileDocument, addCollectionAndDocuments } from './firebase/firebase.util';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { selectCollectionsForPreview, selectShopCollections } from './redux/shop/shop.selectors';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n\n    this.componentDidMount = () => {\n      this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n        if (userAuth) {\n          const userRef = await createUserProfileDocument(userAuth);\n          userRef.onSnapshot(snapshot => {\n            //calling for a snapshot of user object being created or that already is inside the db. This method allows us to check and get properties of user object with .data()method\n            this.props.setCurrentUser({\n              id: snapshot.id,\n              name: snapshot.displayName,\n              email: snapshot.email,\n              ...snapshot.data()\n            });\n          });\n        }\n\n        this.props.setCurrentUser(userAuth); //when user is signed out it return null so we need to update the state/redux to rerender\n\n        this.props.addCollectionAndDocuments('collections', this.props.collectionsArray); //'collections' is a key that collectionsArray will be saved under in db\n      });\n    };\n\n    this.componentWillUnmount = () => {\n      this.unsubscribeFromAuth(); //making sure we sign off/expire the access\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 79\n        }\n      }) : /*#__PURE__*/React.createElement(LoginRegister, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 103\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} //bringing user reducer from redux\n// const mapStateToProps = ({ user }) => {\n//   return ({\n//     currentUser: user.setCurrentUser,\n//   })\n// }\n\n\nconst mapStateToProps = state => ({\n  currentUser: selectCurrentUser(state),\n  collectionsArray: selectCollectionsForPreview(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  //dispatch is a method that takes whatever argument passed and makes it available to every reducer, here a user object being set though userAuth\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n}); //we put null becasue app.js does not need/take anything from root-reducer;\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/App.js"],"names":["React","HomePage","Route","Switch","Redirect","connect","setCurrentUser","ShopPage","Header","LoginRegister","CheckOut","auth","createUserProfileDocument","addCollectionAndDocuments","selectCurrentUser","selectCollectionsForPreview","selectShopCollections","App","Component","unsubscribeFromAuth","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","props","id","name","displayName","email","data","collectionsArray","componentWillUnmount","render","currentUser","mapStateToProps","state","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/HomePage';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport ShopPage from './pages/shop/ShopPage';\nimport Header from './components/Header/Header';\nimport LoginRegister from './pages/LoginRegister/LoginRegister';\nimport CheckOut from './pages/checkOut/CheckOut';\nimport { auth, createUserProfileDocument, addCollectionAndDocuments } from './firebase/firebase.util';\nimport {selectCurrentUser} from './redux/user/user.selectors';\nimport {selectCollectionsForPreview, selectShopCollections} from './redux/shop/shop.selectors';\n\nclass App extends React.Component {\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount = () => {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth)\n        userRef.onSnapshot(snapshot => { //calling for a snapshot of user object being created or that already is inside the db. This method allows us to check and get properties of user object with .data()method\n          this.props.setCurrentUser({\n            id: snapshot.id,\n            name: snapshot.displayName,\n            email: snapshot.email,\n            ...snapshot.data()\n          })\n        })\n      }\n      this.props.setCurrentUser(userAuth) //when user is signed out it return null so we need to update the state/redux to rerender\n      this.props.addCollectionAndDocuments('collections', this.props.collectionsArray)//'collections' is a key that collectionsArray will be saved under in db\n    })\n  }\n\n  componentWillUnmount = () => {\n    this.unsubscribeFromAuth(); //making sure we sign off/expire the access\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        \n        <Switch>\n\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route exact path='/signin' render={() => this.props.currentUser ? (<Redirect to='/' />) : (<LoginRegister />)} />\n          <Route exact path='/checkout' component={CheckOut} />\n        </Switch>\n      </div>\n    );\n  }\n\n}\n//bringing user reducer from redux\n// const mapStateToProps = ({ user }) => {\n//   return ({\n//     currentUser: user.setCurrentUser,\n//   })\n// }\nconst mapStateToProps = (state) => ({\n    currentUser: selectCurrentUser(state),\n    collectionsArray: selectCollectionsForPreview(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  //dispatch is a method that takes whatever argument passed and makes it available to every reducer, here a user object being set though userAuth\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n\n})\n\n\n//we put null becasue app.js does not need/take anything from root-reducer;\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps)(App)\n\n"]},"metadata":{},"sourceType":"module"}