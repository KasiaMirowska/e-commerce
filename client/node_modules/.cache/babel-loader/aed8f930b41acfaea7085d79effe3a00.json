{"ast":null,"code":"var _jsxFileName = \"/Users/kamirska/UDEMYlearning/e-commerce/src/components/Login/Login.js\";\nimport React, { useState } from 'react';\nimport './Login.styles.scss';\nimport FormInput from '../../components/FormInput/FormInput';\nimport CustomButton from '../../components/CustomButton/CustomButton';\nimport { auth } from '../../firebase/firebase.util';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({\n      email,\n      password\n    }))\n  };\n};\n\nconst Login = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userInfo, setUserInfo] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userInfo;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    const {\n      value,\n      name\n    } = e.target;\n    setUserInfo({ ...userInfo,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"LOG IN\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignedIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"LOG IN WITH GOOGLE\"))));\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/components/Login/Login.js"],"names":["React","useState","FormInput","CustomButton","auth","googleSignInStart","emailSignInStart","connect","mapDispatchToProps","dispatch","email","password","Login","userInfo","setUserInfo","handleSubmit","e","preventDefault","handleChange","value","name","target"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,qBAAP;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,SAAQC,IAAR,QAAoB,8BAApB;AACA,SAAQC,iBAAR,EAA2BC,gBAA3B,QAAkD,+BAAlD;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAQ;AACJJ,IAAAA,iBAAiB,EAAE,MAAMI,QAAQ,CAACJ,iBAAiB,EAAlB,CAD7B;AAEJC,IAAAA,gBAAgB,EAAE,CAACI,KAAD,EAAQC,QAAR,KAAqBF,QAAQ,CAACH,gBAAgB,CAAC;AAACI,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAD,CAAjB;AAF3C,GAAR;AAIH,CALD;;AAQA,MAAMC,KAAK,GAAG,CAAC;AAACN,EAAAA,gBAAD;AAAmBD,EAAAA;AAAnB,CAAD,KAA2C;AACrD,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AAACS,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAAD,CAAxC;AAEA,QAAM;AAACD,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBE,QAA1B;;AAEA,QAAME,YAAY,GAAG,MAAMC,CAAN,IAAY;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,gBAAgB,CAACI,KAAD,EAAQC,QAAR,CAAhB;AACH,GAHD;;AAKA,QAAMO,YAAY,GAAIF,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAAEE,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBJ,CAAC,CAACK,MAA1B;AAEAP,IAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAER,OAACO,IAAD,GAAQD;AAFA,KAAD,CAAX;AAIH,GARD;;AAUI,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,eAII;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,KAAK,EAAEL,KAA/B;AAAsC,IAAA,QAAQ,EAAEQ,YAAhD;AAA8D,IAAA,KAAK,EAAC,OAApE;AAA4E,IAAA,QAAQ,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAII,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAEP,QAAlC;AAA4C,IAAA,QAAQ,EAAEO,YAAtD;AAAoE,IAAA,KAAK,EAAC,UAA1E;AAAqF,IAAA,QAAQ,MAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAMI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA6B,IAAA,QAAQ,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAEb,iBAArC;AAAwD,IAAA,gBAAgB,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFA,CANJ,CAJJ,CADJ;AAkBH,CAtCL;;AAwCA,eAAeE,OAAO,CAAC,IAAD,EAAOC,kBAAP,CAAP,CAAkCI,KAAlC,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport './Login.styles.scss';\nimport FormInput from '../../components/FormInput/FormInput';\nimport CustomButton from '../../components/CustomButton/CustomButton';\nimport {auth } from '../../firebase/firebase.util';\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\nimport {connect} from 'react-redux';\n\n\nconst mapDispatchToProps = dispatch => {\n    return ({\n        googleSignInStart: () => dispatch(googleSignInStart()),\n        emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\n    })\n}\n\n\nconst Login = ({emailSignInStart, googleSignInStart}) => {\n    const [userInfo, setUserInfo] = useState({email: '', password: ''})\n\n    const {email, password} = userInfo;\n\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        emailSignInStart(email, password);   \n    }\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        const { value, name } = e.target;\n\n        setUserInfo({\n            ...userInfo,\n            [name]: value,\n        })\n    }\n\n        return (\n            <div className='sign-in'>\n                <h2 className='title'>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={handleSubmit}>\n                   \n                    <FormInput name='email' value={email} onChange={handleChange} label='Email' required />\n\n                    <FormInput name='password' value={password} onChange={handleChange} label='Password' required />\n                    \n                    <div className='buttons'>\n                    <CustomButton type='submit'  required >LOG IN</CustomButton>\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignedIn >LOG IN WITH GOOGLE</CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n\nexport default connect(null, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}