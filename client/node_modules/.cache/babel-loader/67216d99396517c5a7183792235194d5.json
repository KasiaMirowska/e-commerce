{"ast":null,"code":"var _jsxFileName = \"/Users/kamirska/UDEMYlearning/e-commerce/src/pages/shop/ShopPage.js\";\nimport React from 'react';\nimport CollectionsOverviewContainer from '../../components/CollectionsOverview/CollectionsOverview-Container';\nimport { fetchCollectionsStartAsync, fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport CollectionContainer from '../CollectionPage/Collection-Container';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'; //import { createStructuredSelector } from 'reselect';\n//import { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n//CONTAINER PATTERN OPTIMIZATION to keep concerns seperate to each component\n//const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview); moved this logic to CollectionOverviewContainer\n//const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n// const mapStateToProps = createStructuredSelector({\n//     //isCollectionFetching: selectIsCollectionFetching,\n//     // isCollectionsLoaded: selectIsCollectionsLoaded,\n// })\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n});\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n\n    this.componentDidMount = () => {\n      this.props.fetchCollectionsAsync();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${this.props.match.path}`,\n      component: CollectionsOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${this.props.match.path}/:collectionId`,\n      component: CollectionContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/pages/shop/ShopPage.js"],"names":["React","CollectionsOverviewContainer","fetchCollectionsStartAsync","fetchCollectionsStart","CollectionContainer","Route","connect","mapDispatchToProps","dispatch","fetchCollectionsAsync","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","props","render","match","path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,4BAAP,MAAyC,oEAAzC;AACA,SAASC,0BAAT,EAAqCC,qBAArC,QAAkE,+BAAlE;AACA,OAAOC,mBAAP,MAAgC,wCAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,qBAAqB,EAAE,MAAMD,QAAQ,CAACC,qBAAqB,EAAtB;AADD,CAAL,CAAnC;;AAIA,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,uBADmC,GACT,IADS;;AAAA,SAGnCC,iBAHmC,GAGf,MAAM;AACtB,WAAKC,KAAL,CAAWL,qBAAX;AACH,KALkC;AAAA;;AAOnCM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAE,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,IAAK,EAA5C;AAA+C,MAAA,SAAS,EAAEhB,4BAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAE,KAAKa,KAAL,CAAWE,KAAX,CAAiBC,IAAK,gBAAtC;AAAuD,MAAA,SAAS,EAAEb,mBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AAhBkC;;AAoBvC,eAAeE,OAAO,CAAC,IAAD,EAAOC,kBAAP,CAAP,CAAkCG,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport CollectionsOverviewContainer from '../../components/CollectionsOverview/CollectionsOverview-Container';\nimport { fetchCollectionsStartAsync, fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport CollectionContainer from '../CollectionPage/Collection-Container';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n//import { createStructuredSelector } from 'reselect';\n//import { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n \n//CONTAINER PATTERN OPTIMIZATION to keep concerns seperate to each component\n\n//const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview); moved this logic to CollectionOverviewContainer\n//const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n// const mapStateToProps = createStructuredSelector({\n//     //isCollectionFetching: selectIsCollectionFetching,\n//     // isCollectionsLoaded: selectIsCollectionsLoaded,\n// })\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n})\n\nclass ShopPage extends React.Component {\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount = () => {\n        this.props.fetchCollectionsAsync()\n    }\n\n    render() {\n        return (\n            <div className='shop-page'>\n                {/* <Route exact path={`${this.props.match.path}`} render={(props) => (<CollectionsOverviewWithSpinner isLoading={!this.props.isCollectionFetching} {...props} />)} /> */}\n                <Route exact path={`${this.props.match.path}`} component={CollectionsOverviewContainer} />\n                {/* <Route path={`${this.props.match.path}/:collectionId`} render={(props) => (<CollectionPageWithSpinner isLoading={!this.props.isCollectionsLoaded} {...props} />)} /> */}\n                <Route path={`${this.props.match.path}/:collectionId`} component={CollectionContainer} />\n            </div>\n        )\n    }\n\n}\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}