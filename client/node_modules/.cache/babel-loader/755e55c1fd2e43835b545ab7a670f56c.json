{"ast":null,"code":"import _toConsumableArray from\"/Users/kamirska/UDEMYlearning/e-commerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/kamirska/UDEMYlearning/e-commerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var addMultiSameToCart=function addMultiSameToCart(cartItems,newItem){//checking if we have duplicates:\nvar existingItem=cartItems.find(function(item){return item.id===newItem.id;});//we need to create a new array with adjusted object property to make sure that react will rerender\nif(existingItem){return cartItems.map(function(item){if(item.id===newItem.id){return _objectSpread({},item,{quantity:item.quantity+1});}else{return item;}});}return[].concat(_toConsumableArray(cartItems),[_objectSpread({},newItem,{quantity:1})]);//if no duplicates we still need to add the new item to the cart\n};export var removeItem=function removeItem(cartItems,itemToRemove){var existingItem=cartItems.find(function(item){return item.id===itemToRemove.id;});if(existingItem.quantity===1){return cartItems.filter(function(item){return item.id!==existingItem.id;});}return cartItems.map(function(item){if(item.id===itemToRemove.id){return _objectSpread({},item,{quantity:item.quantity-1});}else{return item;}});};","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/redux/cart/cart.utils.js"],"names":["addMultiSameToCart","cartItems","newItem","existingItem","find","item","id","map","quantity","removeItem","itemToRemove","filter"],"mappings":"qUAAA,MAAO,IAAMA,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,SAAD,CAAYC,OAAZ,CAAwB,CACtD;AACA,GAAMC,CAAAA,YAAY,CAAGF,SAAS,CAACG,IAAV,CAAe,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYJ,OAAO,CAACI,EAAxB,EAAnB,CAArB,CACA;AACA,GAAGH,YAAH,CAAiB,CACb,MAAOF,CAAAA,SAAS,CAACM,GAAV,CAAc,SAAAF,IAAI,CAAI,CACzB,GAAGA,IAAI,CAACC,EAAL,GAAYJ,OAAO,CAACI,EAAvB,CAA2B,CACvB,wBACOD,IADP,EAEIG,QAAQ,CAAEH,IAAI,CAACG,QAAL,CAAc,CAF5B,GAIP,CALG,IAKG,CACH,MAAOH,CAAAA,IAAP,CACH,CACA,CATM,CAAP,CAUH,CACD,mCAAWJ,SAAX,oBAA0BC,OAA1B,EAAmCM,QAAQ,CAAE,CAA7C,KACA;AACH,CAlBM,CAoBP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACR,SAAD,CAAYS,YAAZ,CAA4B,CAClD,GAAMP,CAAAA,YAAY,CAAGF,SAAS,CAACG,IAAV,CAAe,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYI,YAAY,CAACJ,EAA7B,EAAnB,CAArB,CAEA,GAAGH,YAAY,CAACK,QAAb,GAA0B,CAA7B,CAAgC,CAC5B,MAAOP,CAAAA,SAAS,CAACU,MAAV,CAAiB,SAAAN,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYH,YAAY,CAACG,EAA7B,EAArB,CAAP,CAEH,CAED,MAAOL,CAAAA,SAAS,CAACM,GAAV,CAAe,SAAAF,IAAI,CAAI,CAC1B,GAAGA,IAAI,CAACC,EAAL,GAAYI,YAAY,CAACJ,EAA5B,CAAgC,CAC5B,wBACOD,IADP,EAEIG,QAAQ,CAAEH,IAAI,CAACG,QAAL,CAAe,CAF7B,GAIH,CALD,IAKO,CACH,MAAOH,CAAAA,IAAP,CACH,CAEJ,CAVM,CAAP,CAWH,CAnBM","sourcesContent":["export const addMultiSameToCart = (cartItems, newItem) => {\n    //checking if we have duplicates:\n    const existingItem = cartItems.find(item => item.id === newItem.id);\n    //we need to create a new array with adjusted object property to make sure that react will rerender\n    if(existingItem) {\n        return cartItems.map(item => {\n            if(item.id === newItem.id) {\n                return ({\n                    ...item,\n                    quantity: item.quantity+1,\n                })\n        } else {\n            return item;\n        }\n        })\n    }\n    return [...cartItems, {...newItem, quantity: 1}]\n    //if no duplicates we still need to add the new item to the cart\n}\n\nexport const removeItem = (cartItems, itemToRemove)=> {\n    const existingItem = cartItems.find(item => item.id === itemToRemove.id)\n\n    if(existingItem.quantity === 1) {\n        return cartItems.filter(item => item.id !== existingItem.id)\n        \n    }\n    \n    return cartItems.map( item => {\n        if(item.id === itemToRemove.id) {\n            return ({\n                ...item,\n                quantity: item.quantity -1,\n            })\n        } else {\n            return item;\n        }\n        \n    })\n}"]},"metadata":{},"sourceType":"module"}