{"ast":null,"code":"import { createSelector } from 'reselect'; //input selector: \n\nconst selectShop = state => {\n  return state.shop;\n};\n\nexport const selectShopCollections = createSelector([selectShop], shop => shop.collections); //after data normalization we have objects instead of arrays so rendering components is broken hence we should convert that object into an array here:\n\nexport const selectCollectionsForPreview = createSelector([selectShopCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []); //currying\n\nexport const selectCollection = collectionUrlParam => {\n  return createSelector([selectShopCollections], collections => collections ? collections[collectionUrlParam] : null //after data normalization we have an object with titled smaller objects holding the collection items\n  );\n};\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectShopCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,SAAOA,KAAK,CAACC,IAAb;AACH,CAFD;;AAIA,OAAO,MAAMC,qBAAqB,GAAGJ,cAAc,CAC/C,CAACC,UAAD,CAD+C,EAE/CE,IAAI,IAAIA,IAAI,CAACE,WAFkC,CAA5C,C,CAIP;;AACA,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACtD,CAACI,qBAAD,CADsD,EAErDC,WAAW,IAAIA,WAAW,GAAEE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAF,GAA0D,EAF/B,CAAlD,C,CAIP;;AACA,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAAI;AAClD,SAAOZ,cAAc,CACjB,CAACI,qBAAD,CADiB,EAEjBC,WAAW,IAAIA,WAAW,GAAEA,WAAW,CAACO,kBAAD,CAAb,GAAoC,IAF7C,CAEiD;AAFjD,GAArB;AAIH,CALM;AAOP,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACpD,CAACC,UAAD,CADoD,EAEpDE,IAAI,IAAIA,IAAI,CAACW,UAFuC,CAAjD","sourcesContent":["import {createSelector} from 'reselect';\n\n//input selector: \nconst selectShop = state => {\n    return state.shop;\n}\n\nexport const selectShopCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n)\n//after data normalization we have objects instead of arrays so rendering components is broken hence we should convert that object into an array here:\nexport const selectCollectionsForPreview = createSelector(\n   [selectShopCollections],\n    collections => collections? Object.keys(collections).map(key => collections[key]) : [],\n)\n//currying\nexport const selectCollection = collectionUrlParam => {\n    return createSelector(\n        [selectShopCollections],\n        collections => collections? collections[collectionUrlParam] : null//after data normalization we have an object with titled smaller objects holding the collection items\n    )\n}\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)"]},"metadata":{},"sourceType":"module"}