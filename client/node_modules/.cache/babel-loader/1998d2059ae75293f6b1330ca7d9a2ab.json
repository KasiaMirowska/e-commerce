{"ast":null,"code":"import { createSelector } from 'reselect'; // there are INPUTSelectors that dont use anything, and OUTPUTselectors that use INPUTselectors and createSelector method to build themselves\n//inputSelector just deconstructs the state : \n\nconst selectCart = state => state.cart; //always add word select as a naming convention to the state property that we select in order to keep it clear\n//OUTPUTselector uses createSelector that takes 2 arguments: an array of INPUT SELECTORS and a function that returns the wanted slice of the state. THis function takes inputSelector's returned output as arguments\n\n\nconst selectCartItems = createSelector([selectCart], cart => cart.cartItems //because state.cart is what selectCart is targeting\n);\nconst selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumualtedQuantity, item) => accumualtedQuantity + item.quantity, 0));","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","accumualtedQuantity","item","quantity"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B,C,CACA;AACA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CACA;AAEA;;;AACA,MAAMC,eAAe,GAAGJ,cAAc,CAClC,CAACC,UAAD,CADkC,EAElCE,IAAI,IAAIA,IAAI,CAACE,SAFqB,CAEX;AAFW,CAAtC;AAKA,MAAMC,oBAAoB,GAAGN,cAAc,CACvC,CAACI,eAAD,CADuC,EAEvCC,SAAS,IAAIA,SAAS,CAACE,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,IAAtB,KAA+BD,mBAAmB,GAAGC,IAAI,CAACC,QAA3E,EAAqF,CAArF,CAF0B,CAA3C","sourcesContent":["import {createSelector} from 'reselect';\n// there are INPUTSelectors that dont use anything, and OUTPUTselectors that use INPUTselectors and createSelector method to build themselves\n//inputSelector just deconstructs the state : \nconst selectCart = state => state.cart;\n//always add word select as a naming convention to the state property that we select in order to keep it clear\n\n//OUTPUTselector uses createSelector that takes 2 arguments: an array of INPUT SELECTORS and a function that returns the wanted slice of the state. THis function takes inputSelector's returned output as arguments\nconst selectCartItems = createSelector(\n    [selectCart],\n    cart => cart.cartItems //because state.cart is what selectCart is targeting\n)\n\nconst selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce((accumualtedQuantity, item) => accumualtedQuantity + item.quantity, 0)\n)"]},"metadata":{},"sourceType":"module"}