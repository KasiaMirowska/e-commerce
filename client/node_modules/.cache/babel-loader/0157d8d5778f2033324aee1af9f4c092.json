{"ast":null,"code":"import CartActionTypes from './cart.types';\nimport { connect } from 'react-redux';\nimport { addMultiSameToCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOOGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addMultiSameToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(item => item.id !== action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/kamirska/UDEMYlearning/e-commerce/src/redux/cart/cart-reducer.js"],"names":["CartActionTypes","connect","addMultiSameToCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOOGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM","filter","item","id"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAAQC,kBAAR,QAAiC,cAAjC;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACJ,aAAP,EAAsBK,MAAtB,KAAiC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,eAAe,CAACU,kBAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFZ,OAAP;;AAIJ,SAAKJ,eAAe,CAACW,QAArB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF1B,OAAP;;AAIJ,SAAKZ,eAAe,CAACa,UAArB;AACI,aAAO,EACH,GAAGN,KADA;AAEHF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACI,OAAP,CAAeI,EAA1D;AAFR,OAAP;;AAIJ;AACI,aAAOT,KAAP;AAjBR;AAmBH,CApBD;;AAsBA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\nimport { connect } from 'react-redux';\n\nimport {addMultiSameToCart} from './cart.utils';\n\nconst INITIAL_STATE = {\n    hidden: true,\n    cartItems: [],\n};\n\nconst cartReducer = (state=INITIAL_STATE, action) => {\n    switch(action.type) {\n        case CartActionTypes.TOOGLE_CART_HIDDEN:\n            return {\n                ...state,\n                hidden: !state.hidden\n            }\n        case CartActionTypes.ADD_ITEM:\n            return {\n                ...state,\n                cartItems: addMultiSameToCart(state.cartItems, action.payload)\n            }\n        case CartActionTypes.CLEAR_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(item => item.id !== action.payload.id)\n            }\n        default:\n            return state;\n    } \n};\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}